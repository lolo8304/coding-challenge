package dhcp.message;

import java.util.HashMap;
import java.util.Map;

public enum DhcpOptionEnum {
    PAD(0),
    SUBNET_MASK(1),
    TIME_OFFSET(2),
    ROUTER(3),
    TIME_SERVER(4),
    NAME_SERVER(5),
    DOMAIN_NAME_SERVER(6),
    LOG_SERVER(7),
    COOKIE_SERVER(8),
    LPR_SERVER(9),
    IMPRESS_SERVER(10),
    RESOURCE_LOCATION_SERVER(11),
    HOST_NAME(12),
    BOOT_FILE_SIZE(13),
    MERIT_DUMP_FILE(14),
    DOMAIN_NAME(15),
    SWAP_SERVER(16),
    ROOT_PATH(17),
    EXTENSIONS_PATH(18),
    IP_FORWARDING_ENABLE(19),
    NON_LOCAL_SOURCE_ROUTING(20),
    POLICY_FILTER(21),
    MAX_DATAGRAM_REASSEMBLY_SIZE(22),
    DEFAULT_TTL(23),
    PATH_MTU_AGING_TIMEOUT(24),
    PATH_MTU_PLATEAU_TABLE(25),
    INTERFACE_MTU(26),
    ALL_SUBNETS_ARE_LOCAL(27),
    BROADCAST_ADDRESS(28),
    PERFORM_MASK_DISCOVERY(29),
    MASK_SUPPLIER(30),
    PERFORM_ROUTER_DISCOVERY(31),
    ROUTER_SOLICITATION_ADDRESS(32),
    STATIC_ROUTE(33),
    TRAILER_ENCAPSULATION(34),
    ARP_CACHE_TIMEOUT(35),
    ETHERNET_ENCAPSULATION(36),
    TCP_DEFAULT_TTL(37),
    TCP_KEEPALIVE_INTERVAL(38),
    TCP_KEEPALIVE_GARBAGE(39),
    NIS_DOMAIN(40),
    NIS_SERVERS(41),
    NTP_SERVERS(42),
    VENDOR_SPECIFIC_INFO(43),
    NETBIOS_NAME_SERVERS(44),
    NETBIOS_DATAGRAM_DISTRIBUTION_SERVER(45),
    NETBIOS_NODE_TYPE(46),
    NETBIOS_SCOPE(47),
    XWINDOW_FONT_SERVER(48),
    XWINDOW_DISPLAY_MANAGER(49),
    REQUESTED_IP_ADDRESS(50),
    IP_ADDRESS_LEASE_TIME(51),
    OPTION_OVERLOAD(52),
    DHCP_MESSAGE_TYPE(53),
    SERVER_IDENTIFIER(54),
    PARAMETER_REQUEST_LIST(55),
    MESSAGE(56),
    MAX_DHCP_MESSAGE_SIZE(57),
    RENEWAL_TIME_VALUE(58),
    REBINDING_TIME_VALUE(59),
    VENDOR_CLASS_IDENTIFIER(60),
    CLIENT_IDENTIFIER(61),
    NETWARE_IP_DOMAIN_NAME(62),
    NETWARE_IP_SUBOPTIONS(63),
    NISPLUS_DOMAIN(64),
    NISPLUS_SERVERS(65),
    TFTP_SERVER_NAME(66),
    BOOTFILE_NAME(67),
    MOBILE_IP_HOME_AGENT(68),
    SMTP_SERVER(69),
    POP3_SERVER(70),
    NNTP_SERVER(71),
    DEFAULT_WWW_SERVER(72),
    DEFAULT_FINGER_SERVER(73),
    DEFAULT_IRC_SERVER(74),
    STREETTALK_SERVER(75),
    STREETTALK_DIRECTORY_ASSISTANCE_SERVER(76),
    USER_CLASS(77),
    SLP_DIRECTORY_AGENT(78),
    SLP_SERVICE_SCOPE(79),
    RAPID_COMMIT(80),
    FQDN(81),
    DHCP_AGENT_OPTIONS(82),
    NDS_SERVERS(85),
    NDS_TREE_NAME(86),
    NDS_CONTEXT(87),
    CLIENT_LAST_TRANSACTION_TIME(91),
    ASSOCIATED_IP(92),
    USER_AUTHENTICATION_PROTOCOL(98),
    AUTO_CONFIG(116),
    NAME_SERVICE_SEARCH(117),
    SUBNET_SELECTION(118),
    DOMAIN_SEARCH(119),
    CLASSLESS_STATIC_ROUTE(121),
    PRIVATE_PROXY_AUTODISCOVERY(252),
    END(255);

    private final int code;

    private static final Map<Integer, DhcpOptionEnum> BY_CODE = new HashMap<>();

    static {
        for (DhcpOptionEnum option : values()) {
            BY_CODE.put(option.code, option);
        }
    }

    DhcpOptionEnum(int code) {
        this.code = code;
    }

    public int getCode() {
        return code;
    }

    public static DhcpOptionEnum fromCode(int code) {
        return BY_CODE.get(code);
    }
}
